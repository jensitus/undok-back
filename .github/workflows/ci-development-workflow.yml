# trigger
name: UNDOK Development CI
on:
  push:
    branches:
      - master
jobs:
  build:
    name: Build artifact
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        id: maven_build
        run: |
          mvn -B --update-snapshots install -DskipTests=true
          echo "MAVEN_BUILD_RESULT=$(echo $?)" >> $GITHUB_ENV
      - name: Extract git information from build
        id: extract_git_information_from_build
        run: |
          echo "GIT_COMMIT_ABBREV=$(cat target/classes/git.properties | grep git.commit.id.abbrev | cut -d "=" -f 2)" >> $GITHUB_ENV
          echo "GIT_COMMIT_MESSAGE_SHORT=$(cat target/classes/git.properties | grep git.commit.message.short | cut -d "=" -f 2 | sed 's/\\//g') >> $GITHUB_ENV
          echo "GIT_BRANCH=$(cat target/classes/git.properties | grep git.branch | cut -d "=" -f 2 | sed 's/\\//g') >> $GITHUB_ENV
      - name: Run unit and integration tests
        id: maven_unit_and_integration_tests
        run: |
          mvn verify -Pit
          echo "MAVEN_TEST_RESULT=$(echo $?)" >> $GITHUB_ENV
      - name: Prepare staging directory
        run: |
          mkdir staging && rsync -av --exclude='*.jar.original' target/*.jar staging
          echo "ARTIFACT_FILENAME=$(ls staging | grep '.jar')" >> $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
          role-session-name: S3DeploySession
          role-duration-seconds: 900
      - name: Upload to S3 bucket
        run: |
          aws s3 sync staging s3://undok-artifacts/undok-back
      - name: Create presigned url
        run: |
          echo "ARTIFACT_PRESIGNED_URL=$(aws s3 presign --expires-in="60" s3://undok-artifacts/undok-back/$ARTIFACT_FILENAME)" >> $GITHUB_ENV
  deploy:
    needs: upload
    name: Deploy & Restart service on test
    runs-on: ubuntu-latest
    steps:
      - name: Download jar on target machine and restart the service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.TEST_HOST }}
          username: ${{ secrets.TEST_HOST_USERNAME }}
          password: ${{ secrets.TEST_HOST_PASSWORD }}
          port: 22
          envs: ARTIFACT_PRESIGNED_URL,ARTIFACT_FILENAME
          script: |
            # should work not tested yet
            cd undok-back
            ls
            export UNDOK_PROC=$(jps | grep undok | awk '{print $1}')
            kill $UNDOK_PROC
            timeout 60 tail --pid=$UNDOK_PROC -f /dev/null
            rm -rf *.jar
            wget "$ARTIFACT_PRESIGNED_URL" -O $ARTIFACT_FILENAME
            ls
            nohup java -Dspring.profiles.active=test -jar $ARTIFACT_FILENAME > application.log &
