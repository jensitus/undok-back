# trigger
name: UNDOK Development CI
on:
  push:
    branches:
      - master
jobs:
  build:
    name: Build artifact
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1.3.0
        with:
          java-version: 11
      - uses: actions/cache@v1.1.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        id: maven_build
        run: |
          mvn -B install -DskipTests=true
          export MAVEN_BUILD_RESULT=$?
          echo "::set-env name=MAVEN_BUILD_RESULT::$(echo $MAVEN_BUILD_RESULT)"
      - name: Extract git information from build
        id: extract_git_information_from_build
        run: |
          echo ::set-output name=GIT_COMMIT_ABBREV::$(cat target/classes/git.properties | grep git.commit.id.abbrev | cut -d "=" -f 2)
          echo ::set-output name=GIT_COMMIT_MESSAGE_SHORT::$(cat target/classes/git.properties | grep git.commit.message.short | cut -d "=" -f 2 | sed 's/\\//g')
          echo ::set-output name=GIT_BRANCH::$(cat target/classes/git.properties | grep git.branch | cut -d "=" -f 2 | sed 's/\\//g')
      - name: Run unit and integration tests
        id: maven_unit_and_integration_tests
        run: |
          mvn verify
          export MAVEN_TEST_RESULT=$?
          echo "::set-env name=MAVEN_TEST_RESULT::$(echo $MAVEN_TEST_RESULT)"

